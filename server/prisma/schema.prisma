generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model duty_fees {
  fee_id         Int                       @id @default(autoincrement())
  package_id     Int
  customs_duty   Decimal                   @db.Decimal(10, 2)
  gct            Decimal                   @db.Decimal(10, 2)
  scl            Decimal?                  @default(0.00) @db.Decimal(10, 2)
  handling_fee   Decimal                   @default(5.00) @db.Decimal(10, 2)
  storage_fee    Decimal?                  @default(0.00) @db.Decimal(10, 2)
  total          Decimal                   @db.Decimal(10, 2)
  payment_status duty_fees_payment_status? @default(unpaid)
  paid_at        DateTime?                 @db.DateTime(0)
  payment_method duty_fees_payment_method?
  packages       packages                  @relation(fields: [package_id], references: [package_id], onDelete: Cascade, onUpdate: Restrict, map: "duty_fees_ibfk_1")

  @@index([package_id], map: "package_id")
}

model notifications {
  notification_id Int       @id @default(autoincrement())
  user_id         Int
  package_id      Int?
  title           String    @db.VarChar(100)
  message         String    @db.Text
  is_read         Boolean?  @default(false)
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  users           users     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "notifications_ibfk_1")
  packages        packages? @relation(fields: [package_id], references: [package_id], onUpdate: Restrict, map: "notifications_ibfk_2")

  @@index([package_id], map: "package_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model package_pallet {
  id         Int      @id @default(autoincrement())
  package_id Int
  pallet_id  Int
  position   String?  @db.VarChar(10)
  packages   packages @relation(fields: [package_id], references: [package_id], onDelete: Cascade, onUpdate: Restrict, map: "package_pallet_ibfk_1")
  pallets    pallets  @relation(fields: [pallet_id], references: [pallet_id], onDelete: Cascade, onUpdate: Restrict, map: "package_pallet_ibfk_2")

  @@unique([package_id, pallet_id], map: "idx_package_pallet")
  @@index([pallet_id], map: "pallet_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model packages {
  package_id Int @id @default(autoincrement()) @map("package_id")
  user_id         Int
  tracking_number String                 @db.VarChar(50)
  carrier         packages_carrier
  description     String?                @db.Text
  weight_lbs      Decimal?               @db.Decimal(5, 2)
  declared_value  Decimal?               @db.Decimal(10, 2)
  status          packages_status?       @default(received_fl)
  auto_matched    Boolean?               @default(false)
  match_method    packages_match_method?
  created_at      DateTime               @default(now()) @db.Timestamp(0)
  updated_at      DateTime               @default(now()) @db.Timestamp(0)
  duty_fees       duty_fees[]
  notifications   notifications[]
  package_pallet  package_pallet[]
  users           users                  @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "packages_ibfk_1")

  @@unique([tracking_number, carrier], map: "idx_tracking")
  @@index([status], map: "idx_status")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pallets {
  pallet_id       Int                     @id @default(autoincrement())
  shipping_method pallets_shipping_method
  departure_date  DateTime?               @db.DateTime(0)
  arrival_date    DateTime?               @db.DateTime(0)
  customs_status  pallets_customs_status? @default(pending)
  manifest_number String?                 @db.VarChar(30)
  created_by      Int
  created_at      DateTime                @default(now()) @db.Timestamp(0)
  package_pallet  package_pallet[]
  staff           staff                   @relation(fields: [created_by], references: [staff_id], onUpdate: Restrict, map: "pallets_ibfk_1")

  @@index([created_by], map: "created_by")
}

model staff {
  staff_id        Int               @id @default(autoincrement())
  username        String            @unique(map: "username") @db.VarChar(50)
  password        String            @db.VarChar(255)
  role            staff_role
  full_name       String            @db.VarChar(100)
  is_active       Boolean?          @default(true)
  last_login      DateTime?         @db.DateTime(0)
  pallets         pallets[]
  warehouse_scans warehouse_scans[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_addresses {
  address_id        Int      @id @default(autoincrement())
  user_id           Int
  unique_identifier String   @db.VarChar(20)
  contact_name      String   @db.VarChar(100)
  address_line1     String   @db.VarChar(100)
  address_line2     String?  @db.VarChar(50)
  city              String   @default("Lauderdale Lakes") @db.VarChar(50)
  state             String   @default("FL") @db.VarChar(2)
  zip_code          String   @db.VarChar(10)
  is_active         Boolean? @default(true)
  created_at        DateTime @default(now()) @db.Timestamp(0)
  users             users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Restrict, map: "user_addresses_ibfk_1")

  @@index([unique_identifier], map: "idx_unique_identifier")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  user_id Int @id @default(autoincrement()) @map("user_id") // Explicitly mapped
  first_name      String           @db.VarChar(50)
  last_name       String           @db.VarChar(50)
  email           String           @unique(map: "email") @db.VarChar(100)
  password        String           @db.VarChar(255)
  phone           String           @db.VarChar(20)
  trn             String?          @db.VarChar(15)
  account_balance Decimal?         @default(0.00) @db.Decimal(10, 2)
  created_at      DateTime         @default(now()) @db.Timestamp(0)
  updated_at      DateTime         @default(now()) @db.Timestamp(0)
  role            users_role       @default(customer)
  notifications   notifications[]
  packages        packages[]
  user_addresses  user_addresses[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model warehouse_scans {
  scan_id Int @id @default(autoincrement()) @map("scan_id")
  tracking_number String                  @db.VarChar(50)
  carrier         warehouse_scans_carrier
  scan_time       DateTime                @default(now()) @db.Timestamp(0)
  operator_id     Int
  weight_lbs      Decimal?                @db.Decimal(5, 2)
  dimensions      String?                 @db.VarChar(20)
  photo_path      String?                 @db.VarChar(255)
  notes           String?                 @db.Text
  staff           staff                   @relation(fields: [operator_id], references: [staff_id], onUpdate: Restrict, map: "warehouse_scans_ibfk_1")

  @@index([operator_id], map: "operator_id")
}

enum pallets_shipping_method {
  air
  sea
}

enum warehouse_scans_carrier {
  USPS
  UPS
  FedEx
  DHL
  Amazon
  Other
}

enum packages_carrier {
  USPS
  UPS
  FedEx
  DHL
  Amazon
  Other
}

enum staff_role {
  admin
  warehouse
  customs
  courier
  customer_service
}

enum pallets_customs_status {
  pending
  cleared
  held
}

enum packages_status {
  received_fl
  in_transit
  arrived_ja
  customs_hold
  customs_cleared
  ready_for_pickup
  out_for_delivery
  delivered
}

enum duty_fees_payment_status {
  unpaid
  pending
  paid
  waived
}

enum packages_match_method {
  tracking
  address
  manual
}

enum duty_fees_payment_method {
  credit_card
  bank_transfer
  cash
  account_balance
}

enum users_role {
  customer
  admin
  warehouse_staff
}
